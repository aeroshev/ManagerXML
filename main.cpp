// Created by Ерошев Артём

#include "xml_reader/xml_manager.h"
#include "xml_reader/xml_interface.h"

/*
 * Это менеджр управления XML файлов, он умеет:
 * - Добавлять новые подразделения и сотрудников
 * - Удалять подразделения и сотрудников
 * - Изменять подразделения и сторудников
 * - Отменять ранее совершённое дейтсвие
 * - Отменить все ранее совершённые дейтсвия
 * - Показать в древовидной структуре содержимое файла
 *
 * Для работы необходимо подключить заголовочные файлы самого менеджера и его интерфейса
 * Менеджер для работы с XML фалов использует библиотеку pugixml
 *
 * Перед началом работы необходимо указать путь до файла.
 * Можно указывать как относительный, так и абсолютный
 *
 * Способ управления подобное терминалу в Linux системах.
 * Сначала вводится команда, затем за ней следуют аргументы.
 * Для ввода данных о сотрудниках октрывется список запросов на данные сотрудника.
 *
 * На экране отображается текущее положение в дереве, в верхнем уровне (уровень департаментов), любая команда
 * производит дейтсвия с департаментами. Команды add, rm и ch будет производится над департаментами.
 * Чтобы работать на уровне сотрудников, необходиом командой cd перейти на один из департаментов.
 *
 * Команда add
 * Для департаментов
 * -> add "Department name"
 * Для сотрудников
 * -> add
 *
 * Команда rm
 * Для департаментов
 * -> rm "Department name"
 * Для сотрудников
 * -> rm
 *
  * Команда ch
 * Для департаментов
 * -> ch "Old department name" "New department name"
 * Для сотрудников
 * -> ch
 *
 * Команда cd
 * Перейти к департаменту
 * -> cd "Department name"
 * Подняться вверх по дереву
 * -> cd ..
 *
 * Команда save - применяет все изменения и сохраняет в файл
 * Команда step_back - отменяет последнее дейтсвие
 * Команда rollback - отменяет все изменения
 * Команда show - показывает на экран содержимое файла в древовидной структуре
 * Команда quit - завершает работу
 * Команда man - выводит краткую подсказку для работы с конссолью
 */

int main()
{
    std::ios_base::sync_with_stdio(false);

    auto manager = std::make_shared<xml_rd::ManagerXML>();

    std::string file;
    std::cout << "Enter file: ";
    getline(std::cin, file);

    try
    {
        manager->load_file(file);
    }
    catch (std::invalid_argument& error)
    {
        std::cerr << error.what() << '\n';
        return 1;
    }

    auto interface = xml_rd::Interface(manager);
    interface.start();

    return 0;
}
